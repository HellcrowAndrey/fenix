basePath: /
definitions:
  dto.CustomerDto:
    properties:
      customerAddress:
        example: Brodvey
        type: string
      customerEmail:
        example: julvern@gmail.com
        type: string
      customerName:
        example: Julvern
        type: string
      customerPhone:
        example: "+780466869"
        type: string
      id:
        example: 1
        type: integer
      purchaseId:
        example: 11
        type: integer
    type: object
  dto.ItemDto:
    properties:
      orderId:
        example: 1
        type: integer
      status:
        example: open or close
        type: string
    type: object
  dto.OrderDto:
    properties:
      amount:
        example: 1.99
        type: number
      customer:
        $ref: '#/definitions/dto.CustomerDto'
      id:
        example: 1
        type: integer
      product:
        items:
          $ref: '#/definitions/dto.ProductDto'
        type: array
      status:
        example: status
        type: string
    type: object
  dto.ProductDto:
    properties:
      description:
        example: This is phone
        type: string
      id:
        example: 1
        type: integer
      images:
        items:
          type: string
        type: array
      name:
        example: Phone
        type: string
      previewImage:
        example: image
        type: string
      price:
        example: 1.11
        type: number
      quantity:
        example: 10
        type: integer
    type: object
host: localhost:8887
info:
  contact: {}
  description: This is a sample service for managers
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Managers API
  version: "1.0"
paths:
  /v1:
    post:
      consumes:
      - application/json
      description: Save a new items
      parameters:
      - description: Save item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/dto.ItemDto'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201": {}
        "400": {}
        "403": {}
      summary: Save a new items
      tags:
      - items
  /v1/{orderId}/{status}:
    put:
      consumes:
      - application/json
      description: Update order by status
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      - description: Order Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "403": {}
        "404": {}
      summary: Update order by status
      tags:
      - items
  /v1/{status}:
    get:
      consumes:
      - application/json
      description: Get a all orders by status
      parameters:
      - description: Order Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderDto'
        "400": {}
        "403": {}
      summary: Get a all orders by status
      tags:
      - items
  /v1/all/{status}:
    get:
      consumes:
      - application/json
      description: Get a all orders by status
      parameters:
      - description: Order Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderDto'
        "400": {}
        "403": {}
      summary: Get a all orders by status
      tags:
      - items
swagger: "2.0"
