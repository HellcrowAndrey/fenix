basePath: /
definitions:
  dto.CustomerDto:
    properties:
      customerAddress:
        type: string
      customerEmail:
        type: string
      customerName:
        type: string
      customerPhone:
        type: string
      id:
        example: 1
        type: integer
      purchaseId:
        example: 11
        type: integer
    type: object
  dto.LoginDto:
    properties:
      createAt:
        example: "2019-11-09T21:21:46+00:00"
        type: string
      device:
        example: phone
        type: string
      id:
        example: 1
        type: integer
      location:
        example: 192.168.1.1
        type: string
      userId:
        example: 12
        type: integer
    type: object
  dto.ManagerDto:
    properties:
      firstName:
        example: Michal
        type: string
      lastName:
        example: Mackonagen
        type: string
      managerId:
        example: 1
        type: integer
    type: object
  dto.ProductDto:
    properties:
      description:
        example: This is phone
        type: string
      id:
        example: 1
        type: integer
      images:
        items:
          type: string
        type: array
      name:
        example: Phone
        type: string
      previewImage:
        example: image
        type: string
      price:
        example: 1.11
        type: number
      quantity:
        example: 10
        type: integer
    type: object
  dto.PurchaseDto:
    properties:
      amount:
        type: number
      createAt:
        example: "2019-11-09T21:21:46+00:00"
        type: string
      customer:
        $ref: '#/definitions/dto.CustomerDto'
      id:
        example: 1
        type: integer
      manager:
        $ref: '#/definitions/dto.ManagerDto'
      orderId:
        example: 1
        type: integer
      products:
        items:
          $ref: '#/definitions/dto.ProductDto'
        type: array
      status:
        type: string
      userId:
        example: 1
        type: integer
    type: object
  dto.ViewDto:
    properties:
      createAt:
        example: "2019-11-09T21:21:46+00:00"
        type: string
      id:
        example: 1
        type: integer
      product:
        $ref: '#/definitions/dto.ProductDto'
    type: object
host: localhost:8787
info:
  contact: {}
  description: This is a sample service for managing statistics
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Statistics API
  version: "1.0"
paths:
  /v1/logins/edit:
    post:
      consumes:
      - application/json
      description: Create a new login
      parameters:
      - description: Create login
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginDto'
      summary: Create a new login
      tags:
      - logins
  /v1/logins/fetch:
    get:
      consumes:
      - application/json
      description: Get details of user logins
      parameters:
      - description: name search by start
        in: query
        name: start
        type: string
      - description: name search by end
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginDto'
      summary: Get details of user logins
      tags:
      - logins
  /v1/logins/fetch/{userId}:
    get:
      consumes:
      - application/json
      description: Get details of user logins
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginDto'
      summary: Get details of user logins
      tags:
      - logins
  /v1/purchase/fetch/{userId}:
    get:
      consumes:
      - application/json
      description: Get details of user purchases
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PurchaseDto'
      summary: Get details of user purchases
      tags:
      - purchases
  /v1/purchases:
    get:
      consumes:
      - application/json
      description: Get details of user purchases
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PurchaseDto'
      summary: Get details of user purchases
      tags:
      - purchases
  /v1/purchases/edit:
    post:
      consumes:
      - application/json
      description: Create a new purchases
      parameters:
      - description: Create purchase
        in: body
        name: purchase
        required: true
        schema:
          $ref: '#/definitions/dto.PurchaseDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PurchaseDto'
      summary: Create a new purchases
      tags:
      - purchases
  /v1/purchases/edit/{orderId}/{status}:
    put:
      description: Update purchase by status
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      - description: Order Status
        in: path
        name: status
        required: true
        type: string
      - description: Update purchase
        in: body
        name: purchase
        required: true
        schema:
          $ref: '#/definitions/dto.ManagerDto'
      responses:
        "200": {}
        "403": {}
        "404": {}
      summary: Update purchase by status
      tags:
      - purchases
  /v1/purchases/fetch:
    get:
      consumes:
      - application/json
      description: Get details of user purchases
      parameters:
      - description: name search by start
        in: query
        name: start
        type: string
      - description: name search by end
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PurchaseDto'
      summary: Get details of user purchases
      tags:
      - purchases
  /v1/purchases/fetch/{orderId}:
    get:
      consumes:
      - application/json
      description: Get details of user purchases
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PurchaseDto'
      summary: Get details of user purchases
      tags:
      - purchases
  /v1/views:
    get:
      consumes:
      - application/json
      description: Get details of user views
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ViewDto'
      summary: Get details of user views
      tags:
      - views
    post:
      consumes:
      - application/json
      description: Create a new views
      parameters:
      - description: Create view
        in: body
        name: view
        required: true
        schema:
          $ref: '#/definitions/dto.ProductDto'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ViewDto'
      summary: Create a new views
      tags:
      - views
  /v1/views/fetch:
    get:
      consumes:
      - application/json
      description: Get details of user views
      parameters:
      - description: name search by start
        in: query
        name: start
        type: string
      - description: name search by end
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ViewDto'
      summary: Get details of user views
      tags:
      - views
  /v1/views/fetch/{userId}:
    get:
      consumes:
      - application/json
      description: Get details of user views
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ViewDto'
      summary: Get details of user views
      tags:
      - views
swagger: "2.0"
