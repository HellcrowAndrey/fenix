version: '3'
services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./schema-prod.sql:/docker-entrypoint-initdb.d/schema-prod.sql
  discovery:
    container_name: discovery
    restart: always
    build: ./discovery
    ports:
      - "3000:3000"
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
  config-server:
    container_name: config-server
    restart: always
    build: ./config-server
    ports:
      - "8888:8888"
    depends_on:
      - discovery
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    volumes:
      - /root/config-properties:/config
  gateway:
    container_name: gateway
    restart: always
    build: ./gateway
    ports:
      - "8081:8081"
    depends_on:
      - discovery
      - config-server
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./gateway-entrypoint.sh config-server 8888 java -jar /app/gateway.jar
  admins:
    container_name: admins
    restart: always
    build: ./admins
    ports:
      - "8083:8083"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./admins-entrypoint.sh config-server 8888 java -jar /app/admins.jar
  emails:
    container_name: emails
    restart: always
    build: ./emails
    ports:
      - "8087:8087"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./emails-entrypoint.sh config-server 8888 java -jar /app/emails.jar
  monitoring:
    container_name: monitoring
    restart: always
    build: ./monitoring
    ports:
      - "3032:3032"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: ./monitoring-entrypoint.sh config-server 8888 java -jar /app/monitoring.jar
  orders:
    container_name: orders
    restart: always
    build: ./orders
    ports:
      - "8086:8086"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./orders-entrypoint.sh config-server 8888 java -jar /app/orders.jar
  products:
    container_name: products
    restart: always
    build: ./products
    ports:
      - "8085:8085"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./products-entrypoint.sh config-server 8888 java -jar /app/products.jar
  users-center:
    container_name: users-center
    restart: always
    build: ./users-center
    ports:
      - "8082:8082"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./users-center-entrypoint.sh config-server 8888 java -jar /app/users-center.jar
  websocket:
    container_name: websocket
    restart: always
    build: ./websocket
    ports:
      - "8094:8094"
    depends_on:
      - discovery
      - config-server
      - gateway
      - orders-service
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: ./websocket-entrypoint.sh config-server 8888 java -jar /app/websocket.jar
  statistics:
    container_name: statistics
    restart: always
    build: ./statistics
    ports:
      - "8089:8089"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./statistics-entrypoint.sh config-server 8888 java ${JAVA_OPTS_STATISTICS} -jar /app/statistics.jar"
  managers:
    container_name: managers
    restart: always
    build: ./managers
    ports:
      - "8084:8084"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./managers-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MANAGERS} -jar /app/managers.jar"
  payments:
    container_name: payments
    restart: always
    build: ./payments
    ports:
      - "8088:8088"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./payments-entrypoint.sh config-server 8888 java ${JAVA_OPTS_PAYMENTS} -jar /app/payments.jar"
  accounts:
    container_name: accounts
    restart: always
    build: ./accounts
    ports:
      - "8090:8090"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./accounts-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ACCOUNTS} -jar /app/accounts.jar"
  geolocation:
    container_name: geolocation
    restart: always
    build: ./geolocation
    ports:
      - "8091:8091"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./geolocation-entrypoint.sh config-server 8888 java ${JAVA_OPTS_GEOLOCATION} -jar /app/geolocation.jar"
  customers:
    container_name: customers
    restart: always
    build: ./customers
    ports:
      - "8092:8092"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./customers-entrypoint.sh config-server 8888 java ${JAVA_OPTS_CUSTOMERS} -jar /app/customers.jar"
  deliveries:
    container_name: deliveries
    restart: always
    build: ./deliveries
    ports:
      - "8093:8093"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./deliveries-entrypoint.sh config-server 8888 java ${JAVA_OPTS_DELIVERY} -jar /app/deliveries.jar"
  bitcoin:
    container_name: bitcoin
    restart: always
    build: ./bitcoin
    ports:
      - "8095:8095"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./bitcoin-entrypoint.sh config-server 8888 java ${JAVA_OPTS_BITCOIN} -jar /app/bitcoin.jar"
  ethereum:
    container_name: ethereum
    restart: always
    build: ./ethereum
    ports:
      - "8096:8096"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./ethereum-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ETHEREUM} -jar /app/ethereum.jar"
  master-card:
    container_name: master-card
    restart: always
    build: ./master-card
    ports:
      - "8097:8097"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
    entrypoint: "./master-card-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MASTER_CARD} -jar /app/master-card.jar"