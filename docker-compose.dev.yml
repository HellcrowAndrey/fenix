version: '3'
services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./schema-dev.sql:/docker-entrypoint-initdb.d/schema-dev.sql
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /root/config-properties/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  discovery:
    container_name: discovery
    build: ./discovery
    ports:
      - "3000:3000"
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "JAVA_OPTS=-XX:+UseParallelGC -XX:+PrintCommandLineFlags -Xmx256m -Xms128m"
  config-server:
    container_name: config-server
    build: ./config-server
    ports:
      - "8888:8888"
    depends_on:
      - discovery
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "JAVA_OPTS=-XX:+UseParallelGC -XX:+PrintCommandLineFlags -Xmx256m -Xms128m"
    volumes:
      - /root/config-properties:/config
  gateway:
    container_name: gateway
    build: ./gateway
    ports:
      - "8081:8081"
    depends_on:
      - discovery
      - config-server
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./gateway-entrypoint.sh config-server 8888 java ${JAVA_OPTS_GATEWAY} -jar /app/gateway.jar"
  admins:
    container_name: admins
    build: ./admins
    ports:
      - "8585:8585"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./admins-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ADMINS} -jar /app/admins.jar"
  emails:
    container_name: emails
    build: ./emails
    ports:
      - "8689:8689"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./emails-entrypoint.sh config-server 8888 java ${JAVA_OPTS_EMAILS} -jar /app/emails.jar"
  monitoring:
    container_name: monitoring
    build: ./monitoring
    ports:
      - "8281:8281"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./monitoring-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MONITORING} -jar /app/monitoring.jar"
  orders-service:
    container_name: orders-service
    build: ./orders
    ports:
      - "8687:8687"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./orders-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ORDERS} -jar /app/orders.jar"
  products-service:
    container_name: products-service
    build: ./products
    ports:
      - "8686:8686"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./products-entrypoint.sh config-server 8888 java ${JAVA_OPTS_PRODUCTS} -jar /app/products.jar"
  users-center:
    container_name: users-center
    build: ./users-center
    ports:
      - "8587:8587"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./users-center-entrypoint.sh config-server 8888  java ${JAVA_OPTS_USERS} -jar /app/users-center.jar"
  websocket:
    container_name: websocket
    build: ./websocket
    ports:
      - "8187:8187"
    depends_on:
      - discovery
      - config-server
      - gateway
      - orders-service
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./websocket-entrypoint.sh config-server 8888 java ${JAVA_OPTS_WS} -jar /app/websocket.jar"
  statistics:
    container_name: statistics
    build: ./statistics
    ports:
      - "8787:8787"
    depends_on:
      - postgresdb
      - discovery
    environment:
      - "ENVIRONMENT=dev"
    entrypoint: ./statistics-entrypoint.sh postgresdb 5432 discovery 3000 statistics
  managers:
    container_name: managers
    build: ./managers
    ports:
      - "8887:8887"
    depends_on:
      - postgresdb
      - discovery
    environment:
      - "ENVIRONMENT=dev"
    entrypoint: ./managers-entrypoint.sh postgresdb 5432 discovery 3000 managers