version: '3'
services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./schema-dev.sql:/docker-entrypoint-initdb.d/schema-dev.sql
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - /root/pgbackups:/backups
    links:
      - postgresdb
    depends_on:
      - postgresdb
    environment:
      - "POSTGRES_HOST=postgresdb"
      - "POSTGRES_DB=products_dev.db,orders_dev.db,users_dev.db,statistics_dev.db,managers_dev.db"
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs"
      - "SCHEDULE=@every 0h30m00s"
      - "BACKUP_KEEP_DAYS=7"
      - "BACKUP_KEEP_WEEKS=4"
      - "BACKUP_KEEP_MONTHS=6"
      - "HEALTHCHECK_PORT=80"
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    restart: always
    ports:
      - "9411:9411"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - /root/config-properties/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - /root/config-properties/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  elasticsearch:
    image: elasticsearch:7.9.0
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - "discovery.type=single-node"
  kibana:
    image: kibana:7.9.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
  logstash:
    image: logstash:7.9.0
    container_name: logstash
    restart: always
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    volumes:
      - /root/config-properties/logstash:/usr/share/logstash/pipeline/
    ports:
      - "9999:9999"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
  discovery:
    container_name: discovery
    restart: always
    build: ./discovery
    ports:
      - "3000:3000"
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "JAVA_OPTS=-XX:+UseParallelGC -XX:+PrintCommandLineFlags -Xmx256m -Xms128m"
  config-server:
    container_name: config-server
    restart: always
    build: ./config-server
    ports:
      - "8888:8888"
    depends_on:
      - discovery
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "JAVA_OPTS=-XX:+UseParallelGC -XX:+PrintCommandLineFlags -Xmx256m -Xms128m"
    volumes:
      - /root/config-properties:/config
  gateway:
    container_name: gateway
    restart: always
    build: ./gateway
    ports:
      - "8081:8081"
    depends_on:
      - discovery
      - config-server
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./gateway-entrypoint.sh config-server 8888 java ${JAVA_OPTS_GATEWAY} -jar /app/gateway.jar"
  admins:
    container_name: admins
    restart: always
    build: ./admins
    ports:
      - "8083:8083"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./admins-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ADMINS} -jar /app/admins.jar"
  emails:
    container_name: emails
    restart: always
    build: ./emails
    ports:
      - "8087:8087"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./emails-entrypoint.sh config-server 8888 java ${JAVA_OPTS_EMAILS} -jar /app/emails.jar"
  monitoring:
    container_name: monitoring
    restart: always
    build: ./monitoring
    ports:
      - "3032:3032"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./monitoring-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MONITORING} -jar /app/monitoring.jar"
  orders:
    container_name: orders
    restart: always
    build: ./orders
    ports:
      - "8086:8086"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./orders-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ORDERS} -jar /app/orders.jar"
  products:
    container_name: products
    restart: always
    build: ./products
    ports:
      - "8085:8085"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./products-entrypoint.sh config-server 8888 java ${JAVA_OPTS_PRODUCTS} -jar /app/products.jar"
  users-center:
    container_name: users-center
    restart: always
    build: ./users-center
    ports:
      - "8082:8082"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./users-center-entrypoint.sh config-server 8888  java ${JAVA_OPTS_USERS} -jar /app/users-center.jar"
  websocket:
    container_name: websocket
    restart: always
    build: ./websocket
    ports:
      - "8094:8094"
    depends_on:
      - discovery
      - config-server
      - gateway
      - orders-service
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./websocket-entrypoint.sh config-server 8888 java ${JAVA_OPTS_WS} -jar /app/websocket.jar"
  statistics:
    container_name: statistics
    restart: always
    build: ./statistics
    ports:
      - "8089:8089"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./statistics-entrypoint.sh config-server 8888 java ${JAVA_OPTS_STATISTICS} -jar /app/statistics.jar"
  managers:
    container_name: managers
    restart: always
    build: ./managers
    ports:
      - "8084:8084"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./managers-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MANAGERS} -jar /app/managers.jar"
  payments:
    container_name: payments
    restart: always
    build: ./payments
    ports:
      - "8088:8088"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./payments-entrypoint.sh config-server 8888 java ${JAVA_OPTS_PAYMENTS} -jar /app/payments.jar"
  accounts:
    container_name: accounts
    restart: always
    build: ./accounts
    ports:
      - "8090:8090"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./accounts-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ACCOUNTS} -jar /app/accounts.jar"
  geolocation:
    container_name: geolocation
    restart: always
    build: ./geolocation
    ports:
      - "8091:8091"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./geolocation-entrypoint.sh config-server 8888 java ${JAVA_OPTS_GEOLOCATION} -jar /app/geolocation.jar"
  customers:
    container_name: customers
    restart: always
    build: ./customers
    ports:
      - "8092:8092"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./customers-entrypoint.sh config-server 8888 java ${JAVA_OPTS_CUSTOMERS} -jar /app/customers.jar"
  deliveries:
    container_name: deliveries
    restart: always
    build: ./deliveries
    ports:
      - "8093:8093"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./deliveries-entrypoint.sh config-server 8888 java ${JAVA_OPTS_DELIVERY} -jar /app/deliveries.jar"
  bitcoin:
    container_name: bitcoin
    restart: always
    build: ./bitcoin
    ports:
      - "8095:8095"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./bitcoin-entrypoint.sh config-server 8888 java ${JAVA_OPTS_BITCOIN} -jar /app/bitcoin.jar"
  ethereum:
    container_name: ethereum
    restart: always
    build: ./ethereum
    ports:
      - "8096:8096"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./ethereum-entrypoint.sh config-server 8888 java ${JAVA_OPTS_ETHEREUM} -jar /app/ethereum.jar"
  master-card:
    container_name: master-card
    restart: always
    build: ./master-card
    ports:
      - "8097:8097"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./master-card-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MASTER_CARD} -jar /app/master-card.jar"
  messenger:
    container_name: messenger
    restart: always
    build: ./messenger
    ports:
      - "8098:8098"
    depends_on:
      - discovery
      - config-server
      - gateway
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    entrypoint: "./messenger-entrypoint.sh config-server 8888 java ${JAVA_OPTS_MASTER_CARD} -jar /app/messenger.jar"